<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ClimateChic - Complete Farm Management System</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css" />
    <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #27ae60;
            --primary-dark: #219a52;
            --secondary: #3498db;
            --accent: #9b59b6;
            --warning: #f39c12;
            --danger: #e74c3c;
            --success: #2ecc71;
            --dark: #2c3e50;
            --light: #ecf0f1;
            --white: #ffffff;
            --gray: #95a5a6;
            --border-radius: 12px;
            --shadow: 0 8px 32px rgba(0,0,0,0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #2c3e50;
        }

        .app-container {
            display: grid;
            grid-template-columns: 280px 1fr;
            grid-template-rows: 80px 1fr;
            grid-template-areas: 
                "sidebar header"
                "sidebar main";
            min-height: 100vh;
        }

        /* Header */
        .header {
            grid-area: header;
            background: var(--white);
            padding: 0 2rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
            box-shadow: var(--shadow);
            z-index: 100;
        }

        .header-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--dark);
        }

        .header-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        /* Sidebar */
        .sidebar {
            grid-area: sidebar;
            background: linear-gradient(180deg, var(--dark) 0%, #1a2530 100%);
            color: var(--white);
            padding: 2rem 0;
            overflow-y: auto;
        }

        .sidebar-header {
            padding: 0 1.5rem 2rem;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .logo {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            color: var(--light);
            text-decoration: none;
            transition: var(--transition);
            border-left: 4px solid transparent;
        }

        .nav-item:hover {
            background: rgba(255,255,255,0.05);
            color: var(--white);
            border-left-color: var(--primary);
        }

        .nav-item.active {
            background: rgba(255,255,255,0.1);
            color: var(--white);
            border-left-color: var(--primary);
        }

        .nav-icon {
            margin-right: 1rem;
            width: 20px;
            text-align: center;
        }

        /* Main Content */
        .main-content {
            grid-area: main;
            padding: 2rem;
            overflow-y: auto;
            background: #f8f9fa;
        }

        .section {
            background: var(--white);
            border-radius: var(--border-radius);
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: var(--shadow);
        }

        .section-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--light);
        }

        .section-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--dark);
        }

        /* Map Section */
        .map-container {
            height: 500px;
            border-radius: var(--border-radius);
            overflow: hidden;
            box-shadow: var(--shadow);
        }

        #map {
            height: 100%;
            width: 100%;
        }

        /* Controls */
        .controls {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .btn {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            color: var(--white);
            padding: 12px 24px;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 500;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(39, 174, 96, 0.3);
        }

        .btn:disabled {
            background: var(--gray);
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .btn-secondary {
            background: linear-gradient(135deg, var(--secondary) 0%, #2980b9 100%);
        }

        .btn-warning {
            background: linear-gradient(135deg, var(--warning) 0%, #e67e22 100%);
        }

        /* Results */
        .results-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-top: 1.5rem;
        }

        .result-card {
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            padding: 1.5rem;
            border-radius: var(--border-radius);
            border-left: 4px solid var(--primary);
            box-shadow: var(--shadow);
        }

        .card-title {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 1rem;
            color: var(--dark);
        }

        /* Dashboard */
        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .metric-card {
            background: var(--white);
            padding: 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            text-align: center;
        }

        .metric-value {
            font-size: 2.5rem;
            font-weight: 700;
            margin: 1rem 0;
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .metric-label {
            color: var(--gray);
            font-size: 0.9rem;
        }

        /* Gantt Chart */
        .gantt-container {
            overflow-x: auto;
            margin: 1rem 0;
        }

        .gantt-chart {
            min-width: 800px;
            border-collapse: collapse;
        }

        .gantt-chart th, .gantt-chart td {
            padding: 0.75rem;
            text-align: left;
            border: 1px solid var(--light);
        }

        .gantt-chart th {
            background: var(--light);
            font-weight: 600;
        }

        .progress-bar {
            background: #e0e0e0;
            border-radius: 20px;
            height: 20px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            border-radius: 20px;
            transition: width 0.3s ease;
        }

        /* Calendar */
        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 0.5rem;
            margin: 1rem 0;
        }

        .calendar-day {
            padding: 1rem;
            background: var(--light);
            border-radius: var(--border-radius);
            text-align: center;
            cursor: pointer;
            transition: var(--transition);
        }

        .calendar-day:hover {
            background: var(--primary);
            color: var(--white);
        }

        .day-completed {
            background: var(--success);
            color: var(--white);
        }

        .day-started {
            background: var(--secondary);
            color: var(--white);
        }

        .day-delayed {
            background: var(--danger);
            color: var(--white);
        }

        /* Accounting Form */
        .accounting-form {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .form-input {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid var(--light);
            border-radius: var(--border-radius);
            transition: var(--transition);
        }

        .form-input:focus {
            border-color: var(--primary);
            outline: none;
        }

        /* Status Indicators */
        .status-indicator {
            display: inline-flex;
            align-items: center;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .status-on-track {
            background: rgba(46, 204, 113, 0.2);
            color: var(--success);
        }

        .status-delayed {
            background: rgba(231, 76, 60, 0.2);
            color: var(--danger);
        }

        .status-behind {
            background: rgba(243, 156, 18, 0.2);
            color: var(--warning);
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .fade-in {
            animation: fadeIn 0.6s ease-out;
        }

        /* Responsive */
        @media (max-width: 1024px) {
            .app-container {
                grid-template-columns: 1fr;
                grid-template-areas: 
                    "header"
                    "main";
            }
            
            .sidebar {
                display: none;
            }
        }
    </style>
</head>
<body>
    <div class="app-container">
        <!-- Header -->
        <header class="header">
            <h1 class="header-title">ClimateChic Farm Management System</h1>
            <div class="header-actions">
                <button class="btn"><i class="fas fa-download"></i> Export Report</button>
                <button class="btn btn-secondary"><i class="fas fa-sync"></i> Refresh</button>
            </div>
        </header>

        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-header">
                <div class="logo">ClimateChic</div>
                <p>Agro-Ecological Planning System</p>
            </div>
            <nav>
                <a href="#map-section" class="nav-item active"><i class="nav-icon fas fa-map"></i> Map Planning</a>
                <a href="#operations" class="nav-item"><i class="nav-icon fas fa-tasks"></i> Operations</a>
                <a href="#accounting" class="nav-item"><i class="nav-icon fas fa-calculator"></i> Accounting</a>
                <a href="#dashboard" class="nav-item"><i class="nav-icon fas fa-chart-line"></i> Dashboard</a>
                <a href="#reports" class="nav-item"><i class="nav-icon fas fa-file-alt"></i> Reports</a>
                <a href="#settings" class="nav-item"><i class="nav-icon fas fa-cog"></i> Settings</a>
            </nav>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <!-- Map Section -->
            <section id="map-section" class="section fade-in">
                <div class="section-header">
                    <h2 class="section-title"><i class="fas fa-map-marked-alt"></i> Farm Boundary Planning</h2>
                    <div class="controls">
                        <button class="btn" id="drawBtn"><i class="fas fa-draw-polygon"></i> Draw Boundary</button>
                        <button class="btn" id="analyzeBtn" disabled><i class="fas fa-brain"></i> Generate Plan</button>
                        <button class="btn btn-warning" id="clearBtn"><i class="fas fa-trash"></i> Clear Map</button>
                    </div>
                </div>
                <div class="map-container">
                    <div id="map"></div>
                </div>
                <div id="status" class="status status-info">Click "Draw Farm Boundary" to start planning your agro-ecological farm</div>
            </section>

            <!-- Results Section -->
            <section id="results" class="section fade-in" style="display: none;">
                <div class="section-header">
                    <h2 class="section-title"><i class="fas fa-seedling"></i> Restoration Plan Results</h2>
                </div>
                <div class="results-grid">
                    <div class="result-card">
                        <h3 class="card-title">Farm Overview</h3>
                        <div id="result-content">Draw a boundary to see your farm plan</div>
                    </div>
                    <div class="result-card">
                        <h3 class="card-title">Quick Stats</h3>
                        <div id="quick-stats">Waiting for analysis...</div>
                    </div>
                </div>
            </section>

            <!-- Operations Section -->
            <section id="operations" class="section fade-in">
                <div class="section-header">
                    <h2 class="section-title"><i class="fas fa-tasks"></i> Operations Management</h2>
                </div>
                
                <h3>Gantt Chart - Project Timeline</h3>
                <div class="gantt-container">
                    <table class="gantt-chart">
                        <thead>
                            <tr>
                                <th>Activity</th>
                                <th>Start Date</th>
                                <th>End Date</th>
                                <th>Progress</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody id="gantt-content">
                            <!-- Will be populated by JavaScript -->
                        </tbody>
                    </table>
                </div>

                <h3 style="margin-top: 2rem;">Monthly Calendar View</h3>
                <div class="calendar" id="calendar-view">
                    <!-- Will be populated by JavaScript -->
                </div>
            </section>

            <!-- Accounting Section -->
            <section id="accounting" class="section fade-in">
                <div class="section-header">
                    <h2 class="section-title"><i class="fas fa-calculator"></i> Financial Management</h2>
                </div>
                
                <div class="accounting-form">
                    <div>
                        <h3>Expenses Tracking</h3>
                        <div class="form-group">
                            <label class="form-label">Expense Type</label>
                            <input type="text" class="form-input" placeholder="e.g., Seeds, Labor, Equipment">
                        </div>
                        <div class="form-group">
                            <label class="form-label">Amount (₱)</label>
                            <input type="number" class="form-input" placeholder="Enter amount">
                        </div>
                        <button class="btn"><i class="fas fa-plus"></i> Add Expense</button>
                    </div>
                    
                    <div>
                        <h3>Sales Tracking</h3>
                        <div class="form-group">
                            <label class="form-label">Product Sold</label>
                            <input type="text" class="form-input" placeholder="e.g., Chicken, Eggs, Produce">
                        </div>
                        <div class="form-group">
                            <label class="form-label">Revenue (₱)</label>
                            <input type="number" class="form-input" placeholder="Enter amount">
                        </div>
                        <button class="btn btn-secondary"><i class="fas fa-plus"></i> Add Sale</button>
                    </div>
                </div>

                <div style="margin-top: 2rem;">
                    <h3>Financial Summary</h3>
                    <div class="results-grid">
                        <div class="result-card">
                            <h4>Total Expenses: ₱0.00</h4>
                            <div class="progress-bar">
                                <div class="progress-fill" style="width: 65%;"></div>
                            </div>
                        </div>
                        <div class="result-card">
                            <h4>Total Revenue: ₱0.00</h4>
                            <div class="progress-bar">
                                <div class="progress-fill" style="width: 35%;"></div>
                            </div>
                        </div>
                        <div class="result-card">
                            <h4>Net Profit: ₱0.00</h4>
                            <span class="status-indicator status-on-track">Projected Positive</span>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Dashboard Section -->
            <section id="dashboard" class="section fade-in">
                <div class="section-header">
                    <h2 class="section-title"><i class="fas fa-chart-line"></i> Performance Dashboard</h2>
                </div>
                
                <div class="dashboard-grid">
                    <div class="metric-card">
                        <i class="fas fa-tree fa-2x" style="color: var(--primary);"></i>
                        <div class="metric-value">0</div>
                        <div class="metric-label">Trees Planted</div>
                    </div>
                    <div class="metric-card">
                        <i class="fas fa-feather-alt fa-2x" style="color: var(--secondary);"></i>
                        <div class="metric-value">0</div>
                        <div class="metric-label">Chickens Raised</div>
                    </div>
                    <div class="metric-card">
                        <i class="fas fa-leaf fa-2x" style="color: var(--success);"></i>
                        <div class="metric-value">0%</div>
                        <div class="metric-label">Forest Cover Gain</div>
                    </div>
                    <div class="metric-card">
                        <i class="fas fa-tachometer-alt fa-2x" style="color: var(--warning);"></i>
                        <div class="metric-value">Moderate</div>
                        <div class="metric-label">Progress Speed</div>
                    </div>
                </div>

                <div class="results-grid">
                    <div class="result-card">
                        <h3>Project Health</h3>
                        <span class="status-indicator status-on-track">On Schedule</span>
                        <p>Overall project is progressing as planned</p>
                    </div>
                    <div class="result-card">
                        <h3>Financial Health</h3>
                        <span class="status-indicator status-on-track">Projected Positive</span>
                        <p>Net profit expected within 18 months</p>
                    </div>
                    <div class="result-card">
                        <h3>Ecological Impact</h3>
                        <span class="status-indicator status-on-track">Excellent</span>
                        <p>High forest cover gain per hectare</p>
                    </div>
                </div>
            </section>
        </main>
    </div>

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>
    <script>
        // ... (All the previous JavaScript code remains exactly the same) ...
        // Initialize variables
        let map, drawnItems, drawControl, currentPolygon = null;
        
        // Initialize the map - ZOOMED TO LUZON, PHILIPPINES
        function initMap() {
            // Luzon, Philippines coordinates [latitude, longitude]
            const luzonCenter = [16.0, 121.0];
            const luzonBounds = [
                [12.0, 119.0], // Southwest
                [19.0, 124.0]  // Northeast
            ];
            
            map = L.map('map').setView(luzonCenter, 7); // Zoom level 7 for Luzon overview
            
            // Base layers
            const baseLayers = {
                "Satellite": L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
                    attribution: 'Esri World Imagery'
                }),
                "Terrain": L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}', {
                    attribution: 'Esri Terrain'
                }),
                "Dark Mode": L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
                    attribution: 'CartoDB'
                }),
                "OpenStreetMap": L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: 'OpenStreetMap'
                })
            };
            
            baseLayers.Satellite.addTo(map);
            L.control.layers(baseLayers).addTo(map);
            
            // Initialize drawn items layer
            drawnItems = new L.FeatureGroup();
            map.addLayer(drawnItems);
            
            // Setup event listeners FIRST
            setupEventListeners();
            
            // Initialize draw control AFTER event listeners
            drawControl = new L.Control.Draw({
                edit: {
                    featureGroup: drawnItems
                },
                draw: {
                    polygon: {
                        allowIntersection: false,
                        showArea: true,
                        metric: true,
                        shapeOptions: {
                            color: '#27ae60',
                            weight: 3,
                            fillOpacity: 0.3
                        }
                    },
                    rectangle: {
                        shapeOptions: {
                            color: '#27ae60',
                            weight: 3,
                            fillOpacity: 0.3
                        }
                    },
                    circle: false,
                    marker: false,
                    polyline: false
                }
            });
            
            map.addControl(drawControl);
            
            // Add biogeographic regions for Luzon
            addBiogeographicRegions();
            
            // Initialize operations data
            initializeOperationsData();
        }
        
        // Initialize operations data
        function initializeOperationsData() {
            // Sample Gantt chart data
            const ganttData = [
                { activity: 'Soil Preparation', start: '2024-01', end: '2024-03', progress: 100, status: 'completed' },
                { activity: 'Tree Planting', start: '2024-02', end: '2024-06', progress: 75, status: 'started' },
                { activity: 'Poultry Setup', start: '2024-04', end: '2024-08', progress: 40, status: 'started' },
                { activity: 'Silkworm Production', start: '2024-06', end: '2024-12', progress: 20, status: 'delayed' },
                { activity: 'First Harvest', start: '2024-09', end: '2024-12', progress: 0, status: 'planned' }
            ];
            
            // Populate Gantt chart
            const ganttContent = document.getElementById('gantt-content');
            ganttData.forEach(item => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${item.activity}</td>
                    <td>${item.start}</td>
                    <td>${item.end}</td>
                    <td>
                        <div class="progress-bar">
                            <div class="progress-fill" style="width: ${item.progress}%;"></div>
                        </div>
                        ${item.progress}%
                    </td>
                    <td><span class="status-indicator status-${item.status === 'completed' ? 'on-track' : item.status === 'delayed' ? 'delayed' : 'on-track'}">${item.status}</span></td>
                `;
                ganttContent.appendChild(row);
            });
            
            // Populate calendar
            const calendar = document.getElementById('calendar-view');
            for (let i = 1; i <= 31; i++) {
                const day = document.createElement('div');
                day.className = 'calendar-day';
                day.textContent = i;
                
                // Random status for demo
                const randomStatus = Math.random();
                if (randomStatus < 0.3) day.classList.add('day-completed');
                else if (randomStatus < 0.6) day.classList.add('day-started');
                else if (randomStatus < 0.7) day.classList.add('day-delayed');
                
                calendar.appendChild(day);
            }
        }
        
        // ... (All the rest of your existing JavaScript functions remain exactly the same) ...
        // [All the previous functions like setupEventListeners, calculateArea, analyzeLand, etc.]
        
        // Initialize the map when page loads
        document.addEventListener('DOMContentLoaded', initMap);
    </script>
</body>
</html>